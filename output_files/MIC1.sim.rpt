Simulator report for MIC1
Wed May 07 08:21:26 2025
Quartus II 64-Bit Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. Simulator Summary
  3. Simulator Settings
  4. Simulation Waveforms
  5. Coverage Summary
  6. Complete 1/0-Value Coverage
  7. Missing 1-Value Coverage
  8. Missing 0-Value Coverage
  9. Simulator INI Usage
 10. Simulator Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+--------------------------------------------+
; Simulator Summary                          ;
+-----------------------------+--------------+
; Type                        ; Value        ;
+-----------------------------+--------------+
; Simulation Start Time       ; 0 ps         ;
; Simulation End Time         ; 1.0 us       ;
; Simulation Netlist Size     ; 183 nodes    ;
; Simulation Coverage         ;      49.18 % ;
; Total Number of Transitions ; 423          ;
; Simulation Breakpoints      ; 0            ;
; Family                      ; Cyclone II   ;
+-----------------------------+--------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------+
; Simulator Settings                                                                                                                                     ;
+--------------------------------------------------------------------------------------------+-------------------------------------------+---------------+
; Option                                                                                     ; Setting                                   ; Default Value ;
+--------------------------------------------------------------------------------------------+-------------------------------------------+---------------+
; Simulation mode                                                                            ; Functional                                ; Timing        ;
; Start time                                                                                 ; 0 ns                                      ; 0 ns          ;
; Simulation results format                                                                  ; VWF                                       ;               ;
; Vector input source                                                                        ; C:/Users/Luiza/Desktop/LAOC1/ULA_8bit.vwf ;               ;
; Add pins automatically to simulation output waveforms                                      ; On                                        ; On            ;
; Check outputs                                                                              ; Off                                       ; Off           ;
; Report simulation coverage                                                                 ; On                                        ; On            ;
; Display complete 1/0 value coverage report                                                 ; On                                        ; On            ;
; Display missing 1-value coverage report                                                    ; On                                        ; On            ;
; Display missing 0-value coverage report                                                    ; On                                        ; On            ;
; Detect setup and hold time violations                                                      ; Off                                       ; Off           ;
; Detect glitches                                                                            ; Off                                       ; Off           ;
; Disable timing delays in Timing Simulation                                                 ; Off                                       ; Off           ;
; Generate Signal Activity File                                                              ; Off                                       ; Off           ;
; Generate VCD File for PowerPlay Power Analyzer                                             ; Off                                       ; Off           ;
; Group bus channels in simulation results                                                   ; Off                                       ; Off           ;
; Preserve fewer signal transitions to reduce memory requirements                            ; On                                        ; On            ;
; Trigger vector comparison with the specified mode                                          ; INPUT_EDGE                                ; INPUT_EDGE    ;
; Disable setup and hold time violations detection in input registers of bi-directional pins ; Off                                       ; Off           ;
; Overwrite Waveform Inputs With Simulation Outputs                                          ; Off                                       ;               ;
; Perform Glitch Filtering in Timing Simulation                                              ; Auto                                      ; Auto          ;
+--------------------------------------------------------------------------------------------+-------------------------------------------+---------------+


+----------------------+
; Simulation Waveforms ;
+----------------------+
Waveform report data cannot be output to ASCII.
Please use Quartus II 64-Bit to view the waveform report data.


+--------------------------------------------------------------------+
; Coverage Summary                                                   ;
+-----------------------------------------------------+--------------+
; Type                                                ; Value        ;
+-----------------------------------------------------+--------------+
; Total coverage as a percentage                      ;      49.18 % ;
; Total nodes checked                                 ; 183          ;
; Total output ports checked                          ; 183          ;
; Total output ports with complete 1/0-value coverage ; 90           ;
; Total output ports with no 1/0-value coverage       ; 69           ;
; Total output ports with no 1-value coverage         ; 78           ;
; Total output ports with no 0-value coverage         ; 84           ;
+-----------------------------------------------------+--------------+


The following table displays output ports that toggle between 1 and 0 during simulation.
+--------------------------------------------------------------------------------------------------------------------------------------+
; Complete 1/0-Value Coverage                                                                                                          ;
+---------------------------------------------------------+---------------------------------------------------------+------------------+
; Node Name                                               ; Output Port Name                                        ; Output Port Type ;
+---------------------------------------------------------+---------------------------------------------------------+------------------+
; |ULA_8_bits|INVA                                        ; |ULA_8_bits|INVA                                        ; out              ;
; |ULA_8_bits|A[7]                                        ; |ULA_8_bits|A[7]                                        ; out              ;
; |ULA_8_bits|A[6]                                        ; |ULA_8_bits|A[6]                                        ; out              ;
; |ULA_8_bits|A[5]                                        ; |ULA_8_bits|A[5]                                        ; out              ;
; |ULA_8_bits|A[4]                                        ; |ULA_8_bits|A[4]                                        ; out              ;
; |ULA_8_bits|A[3]                                        ; |ULA_8_bits|A[3]                                        ; out              ;
; |ULA_8_bits|A[2]                                        ; |ULA_8_bits|A[2]                                        ; out              ;
; |ULA_8_bits|A[1]                                        ; |ULA_8_bits|A[1]                                        ; out              ;
; |ULA_8_bits|A[0]                                        ; |ULA_8_bits|A[0]                                        ; out              ;
; |ULA_8_bits|ENA                                         ; |ULA_8_bits|ENA                                         ; out              ;
; |ULA_8_bits|B[7]                                        ; |ULA_8_bits|B[7]                                        ; out              ;
; |ULA_8_bits|B[6]                                        ; |ULA_8_bits|B[6]                                        ; out              ;
; |ULA_8_bits|B[5]                                        ; |ULA_8_bits|B[5]                                        ; out              ;
; |ULA_8_bits|B[4]                                        ; |ULA_8_bits|B[4]                                        ; out              ;
; |ULA_8_bits|B[2]                                        ; |ULA_8_bits|B[2]                                        ; out              ;
; |ULA_8_bits|B[1]                                        ; |ULA_8_bits|B[1]                                        ; out              ;
; |ULA_8_bits|B[0]                                        ; |ULA_8_bits|B[0]                                        ; out              ;
; |ULA_8_bits|ENB                                         ; |ULA_8_bits|ENB                                         ; out              ;
; |ULA_8_bits|S[7]                                        ; |ULA_8_bits|S[7]                                        ; pin_out          ;
; |ULA_8_bits|S[6]                                        ; |ULA_8_bits|S[6]                                        ; pin_out          ;
; |ULA_8_bits|S[5]                                        ; |ULA_8_bits|S[5]                                        ; pin_out          ;
; |ULA_8_bits|S[4]                                        ; |ULA_8_bits|S[4]                                        ; pin_out          ;
; |ULA_8_bits|S[3]                                        ; |ULA_8_bits|S[3]                                        ; pin_out          ;
; |ULA_8_bits|S[2]                                        ; |ULA_8_bits|S[2]                                        ; pin_out          ;
; |ULA_8_bits|S[1]                                        ; |ULA_8_bits|S[1]                                        ; pin_out          ;
; |ULA_8_bits|S[0]                                        ; |ULA_8_bits|S[0]                                        ; pin_out          ;
; |ULA_8_bits|ULA_1_bit:inst|inst10                       ; |ULA_8_bits|ULA_1_bit:inst|inst10                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst|inst7                        ; |ULA_8_bits|ULA_1_bit:inst|inst7                        ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst|inst                         ; |ULA_8_bits|ULA_1_bit:inst|inst                         ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst|inst2                        ; |ULA_8_bits|ULA_1_bit:inst|inst2                        ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst|inst8                        ; |ULA_8_bits|ULA_1_bit:inst|inst8                        ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst|inst4                        ; |ULA_8_bits|ULA_1_bit:inst|inst4                        ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst|FULL_ADDER_1BIT:inst1|inst1  ; |ULA_8_bits|ULA_1_bit:inst|FULL_ADDER_1BIT:inst1|inst1  ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst|FULL_ADDER_1BIT:inst1|inst   ; |ULA_8_bits|ULA_1_bit:inst|FULL_ADDER_1BIT:inst1|inst   ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst1|inst10                      ; |ULA_8_bits|ULA_1_bit:inst1|inst10                      ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst1|inst7                       ; |ULA_8_bits|ULA_1_bit:inst1|inst7                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst1|inst                        ; |ULA_8_bits|ULA_1_bit:inst1|inst                        ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst1|inst2                       ; |ULA_8_bits|ULA_1_bit:inst1|inst2                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst1|inst8                       ; |ULA_8_bits|ULA_1_bit:inst1|inst8                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst1|inst4                       ; |ULA_8_bits|ULA_1_bit:inst1|inst4                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst1|FULL_ADDER_1BIT:inst1|inst1 ; |ULA_8_bits|ULA_1_bit:inst1|FULL_ADDER_1BIT:inst1|inst1 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst1|FULL_ADDER_1BIT:inst1|inst  ; |ULA_8_bits|ULA_1_bit:inst1|FULL_ADDER_1BIT:inst1|inst  ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst2|inst10                      ; |ULA_8_bits|ULA_1_bit:inst2|inst10                      ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst2|inst7                       ; |ULA_8_bits|ULA_1_bit:inst2|inst7                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst2|inst                        ; |ULA_8_bits|ULA_1_bit:inst2|inst                        ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst2|inst2                       ; |ULA_8_bits|ULA_1_bit:inst2|inst2                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst2|inst8                       ; |ULA_8_bits|ULA_1_bit:inst2|inst8                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst2|inst4                       ; |ULA_8_bits|ULA_1_bit:inst2|inst4                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst2|FULL_ADDER_1BIT:inst1|inst1 ; |ULA_8_bits|ULA_1_bit:inst2|FULL_ADDER_1BIT:inst1|inst1 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst2|FULL_ADDER_1BIT:inst1|inst  ; |ULA_8_bits|ULA_1_bit:inst2|FULL_ADDER_1BIT:inst1|inst  ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst3|inst10                      ; |ULA_8_bits|ULA_1_bit:inst3|inst10                      ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst3|inst7                       ; |ULA_8_bits|ULA_1_bit:inst3|inst7                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst3|inst                        ; |ULA_8_bits|ULA_1_bit:inst3|inst                        ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst3|inst2                       ; |ULA_8_bits|ULA_1_bit:inst3|inst2                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst3|inst8                       ; |ULA_8_bits|ULA_1_bit:inst3|inst8                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst3|inst4                       ; |ULA_8_bits|ULA_1_bit:inst3|inst4                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst3|FULL_ADDER_1BIT:inst1|inst1 ; |ULA_8_bits|ULA_1_bit:inst3|FULL_ADDER_1BIT:inst1|inst1 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst3|FULL_ADDER_1BIT:inst1|inst  ; |ULA_8_bits|ULA_1_bit:inst3|FULL_ADDER_1BIT:inst1|inst  ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst4|inst10                      ; |ULA_8_bits|ULA_1_bit:inst4|inst10                      ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst4|inst7                       ; |ULA_8_bits|ULA_1_bit:inst4|inst7                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst4|inst                        ; |ULA_8_bits|ULA_1_bit:inst4|inst                        ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst4|inst2                       ; |ULA_8_bits|ULA_1_bit:inst4|inst2                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst4|inst8                       ; |ULA_8_bits|ULA_1_bit:inst4|inst8                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst4|inst4                       ; |ULA_8_bits|ULA_1_bit:inst4|inst4                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst4|FULL_ADDER_1BIT:inst1|inst1 ; |ULA_8_bits|ULA_1_bit:inst4|FULL_ADDER_1BIT:inst1|inst1 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst4|FULL_ADDER_1BIT:inst1|inst  ; |ULA_8_bits|ULA_1_bit:inst4|FULL_ADDER_1BIT:inst1|inst  ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst5|inst10                      ; |ULA_8_bits|ULA_1_bit:inst5|inst10                      ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst5|inst7                       ; |ULA_8_bits|ULA_1_bit:inst5|inst7                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst5|inst                        ; |ULA_8_bits|ULA_1_bit:inst5|inst                        ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst5|inst2                       ; |ULA_8_bits|ULA_1_bit:inst5|inst2                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst5|inst8                       ; |ULA_8_bits|ULA_1_bit:inst5|inst8                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst5|inst4                       ; |ULA_8_bits|ULA_1_bit:inst5|inst4                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst5|FULL_ADDER_1BIT:inst1|inst1 ; |ULA_8_bits|ULA_1_bit:inst5|FULL_ADDER_1BIT:inst1|inst1 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst5|FULL_ADDER_1BIT:inst1|inst  ; |ULA_8_bits|ULA_1_bit:inst5|FULL_ADDER_1BIT:inst1|inst  ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst6|inst10                      ; |ULA_8_bits|ULA_1_bit:inst6|inst10                      ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst6|inst7                       ; |ULA_8_bits|ULA_1_bit:inst6|inst7                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst6|inst                        ; |ULA_8_bits|ULA_1_bit:inst6|inst                        ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst6|inst2                       ; |ULA_8_bits|ULA_1_bit:inst6|inst2                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst6|inst8                       ; |ULA_8_bits|ULA_1_bit:inst6|inst8                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst6|inst4                       ; |ULA_8_bits|ULA_1_bit:inst6|inst4                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst6|FULL_ADDER_1BIT:inst1|inst1 ; |ULA_8_bits|ULA_1_bit:inst6|FULL_ADDER_1BIT:inst1|inst1 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst6|FULL_ADDER_1BIT:inst1|inst  ; |ULA_8_bits|ULA_1_bit:inst6|FULL_ADDER_1BIT:inst1|inst  ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst7|inst10                      ; |ULA_8_bits|ULA_1_bit:inst7|inst10                      ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst7|inst7                       ; |ULA_8_bits|ULA_1_bit:inst7|inst7                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst7|inst                        ; |ULA_8_bits|ULA_1_bit:inst7|inst                        ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst7|inst2                       ; |ULA_8_bits|ULA_1_bit:inst7|inst2                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst7|inst8                       ; |ULA_8_bits|ULA_1_bit:inst7|inst8                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst7|inst4                       ; |ULA_8_bits|ULA_1_bit:inst7|inst4                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst7|FULL_ADDER_1BIT:inst1|inst1 ; |ULA_8_bits|ULA_1_bit:inst7|FULL_ADDER_1BIT:inst1|inst1 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst7|FULL_ADDER_1BIT:inst1|inst  ; |ULA_8_bits|ULA_1_bit:inst7|FULL_ADDER_1BIT:inst1|inst  ; out0             ;
+---------------------------------------------------------+---------------------------------------------------------+------------------+


The following table displays output ports that do not toggle to 1 during simulation.
+--------------------------------------------------------------------------------------------------------------------------------------+
; Missing 1-Value Coverage                                                                                                             ;
+---------------------------------------------------------+---------------------------------------------------------+------------------+
; Node Name                                               ; Output Port Name                                        ; Output Port Type ;
+---------------------------------------------------------+---------------------------------------------------------+------------------+
; |ULA_8_bits|COUT                                        ; |ULA_8_bits|COUT                                        ; pin_out          ;
; |ULA_8_bits|CIN                                         ; |ULA_8_bits|CIN                                         ; out              ;
; |ULA_8_bits|F1                                          ; |ULA_8_bits|F1                                          ; out              ;
; |ULA_8_bits|ULA_1_bit:inst|inst6                        ; |ULA_8_bits|ULA_1_bit:inst|inst6                        ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst|inst3                        ; |ULA_8_bits|ULA_1_bit:inst|inst3                        ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst|FULL_ADDER_1BIT:inst1|inst2  ; |ULA_8_bits|ULA_1_bit:inst|FULL_ADDER_1BIT:inst1|inst2  ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst|FULL_ADDER_1BIT:inst1|inst5  ; |ULA_8_bits|ULA_1_bit:inst|FULL_ADDER_1BIT:inst1|inst5  ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst|FULL_ADDER_1BIT:inst1|inst3  ; |ULA_8_bits|ULA_1_bit:inst|FULL_ADDER_1BIT:inst1|inst3  ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst|FULL_ADDER_1BIT:inst1|inst4  ; |ULA_8_bits|ULA_1_bit:inst|FULL_ADDER_1BIT:inst1|inst4  ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst|DECODER_2X4:inst11|inst      ; |ULA_8_bits|ULA_1_bit:inst|DECODER_2X4:inst11|inst      ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst|DECODER_2X4:inst11|inst1     ; |ULA_8_bits|ULA_1_bit:inst|DECODER_2X4:inst11|inst1     ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst|DECODER_2X4:inst11|inst3     ; |ULA_8_bits|ULA_1_bit:inst|DECODER_2X4:inst11|inst3     ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst1|inst6                       ; |ULA_8_bits|ULA_1_bit:inst1|inst6                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst1|inst3                       ; |ULA_8_bits|ULA_1_bit:inst1|inst3                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst1|inst9                       ; |ULA_8_bits|ULA_1_bit:inst1|inst9                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst1|FULL_ADDER_1BIT:inst1|inst2 ; |ULA_8_bits|ULA_1_bit:inst1|FULL_ADDER_1BIT:inst1|inst2 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst1|FULL_ADDER_1BIT:inst1|inst5 ; |ULA_8_bits|ULA_1_bit:inst1|FULL_ADDER_1BIT:inst1|inst5 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst1|FULL_ADDER_1BIT:inst1|inst3 ; |ULA_8_bits|ULA_1_bit:inst1|FULL_ADDER_1BIT:inst1|inst3 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst1|FULL_ADDER_1BIT:inst1|inst4 ; |ULA_8_bits|ULA_1_bit:inst1|FULL_ADDER_1BIT:inst1|inst4 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst1|DECODER_2X4:inst11|inst     ; |ULA_8_bits|ULA_1_bit:inst1|DECODER_2X4:inst11|inst     ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst1|DECODER_2X4:inst11|inst1    ; |ULA_8_bits|ULA_1_bit:inst1|DECODER_2X4:inst11|inst1    ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst1|DECODER_2X4:inst11|inst3    ; |ULA_8_bits|ULA_1_bit:inst1|DECODER_2X4:inst11|inst3    ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst2|inst6                       ; |ULA_8_bits|ULA_1_bit:inst2|inst6                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst2|inst3                       ; |ULA_8_bits|ULA_1_bit:inst2|inst3                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst2|FULL_ADDER_1BIT:inst1|inst2 ; |ULA_8_bits|ULA_1_bit:inst2|FULL_ADDER_1BIT:inst1|inst2 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst2|FULL_ADDER_1BIT:inst1|inst5 ; |ULA_8_bits|ULA_1_bit:inst2|FULL_ADDER_1BIT:inst1|inst5 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst2|FULL_ADDER_1BIT:inst1|inst3 ; |ULA_8_bits|ULA_1_bit:inst2|FULL_ADDER_1BIT:inst1|inst3 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst2|FULL_ADDER_1BIT:inst1|inst4 ; |ULA_8_bits|ULA_1_bit:inst2|FULL_ADDER_1BIT:inst1|inst4 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst2|DECODER_2X4:inst11|inst     ; |ULA_8_bits|ULA_1_bit:inst2|DECODER_2X4:inst11|inst     ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst2|DECODER_2X4:inst11|inst1    ; |ULA_8_bits|ULA_1_bit:inst2|DECODER_2X4:inst11|inst1    ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst2|DECODER_2X4:inst11|inst3    ; |ULA_8_bits|ULA_1_bit:inst2|DECODER_2X4:inst11|inst3    ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst3|inst6                       ; |ULA_8_bits|ULA_1_bit:inst3|inst6                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst3|inst3                       ; |ULA_8_bits|ULA_1_bit:inst3|inst3                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst3|inst9                       ; |ULA_8_bits|ULA_1_bit:inst3|inst9                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst3|FULL_ADDER_1BIT:inst1|inst2 ; |ULA_8_bits|ULA_1_bit:inst3|FULL_ADDER_1BIT:inst1|inst2 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst3|FULL_ADDER_1BIT:inst1|inst5 ; |ULA_8_bits|ULA_1_bit:inst3|FULL_ADDER_1BIT:inst1|inst5 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst3|FULL_ADDER_1BIT:inst1|inst3 ; |ULA_8_bits|ULA_1_bit:inst3|FULL_ADDER_1BIT:inst1|inst3 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst3|FULL_ADDER_1BIT:inst1|inst4 ; |ULA_8_bits|ULA_1_bit:inst3|FULL_ADDER_1BIT:inst1|inst4 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst3|DECODER_2X4:inst11|inst     ; |ULA_8_bits|ULA_1_bit:inst3|DECODER_2X4:inst11|inst     ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst3|DECODER_2X4:inst11|inst1    ; |ULA_8_bits|ULA_1_bit:inst3|DECODER_2X4:inst11|inst1    ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst3|DECODER_2X4:inst11|inst3    ; |ULA_8_bits|ULA_1_bit:inst3|DECODER_2X4:inst11|inst3    ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst4|inst6                       ; |ULA_8_bits|ULA_1_bit:inst4|inst6                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst4|inst9                       ; |ULA_8_bits|ULA_1_bit:inst4|inst9                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst4|FULL_ADDER_1BIT:inst1|inst2 ; |ULA_8_bits|ULA_1_bit:inst4|FULL_ADDER_1BIT:inst1|inst2 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst4|FULL_ADDER_1BIT:inst1|inst5 ; |ULA_8_bits|ULA_1_bit:inst4|FULL_ADDER_1BIT:inst1|inst5 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst4|FULL_ADDER_1BIT:inst1|inst3 ; |ULA_8_bits|ULA_1_bit:inst4|FULL_ADDER_1BIT:inst1|inst3 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst4|FULL_ADDER_1BIT:inst1|inst4 ; |ULA_8_bits|ULA_1_bit:inst4|FULL_ADDER_1BIT:inst1|inst4 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst4|DECODER_2X4:inst11|inst     ; |ULA_8_bits|ULA_1_bit:inst4|DECODER_2X4:inst11|inst     ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst4|DECODER_2X4:inst11|inst1    ; |ULA_8_bits|ULA_1_bit:inst4|DECODER_2X4:inst11|inst1    ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst4|DECODER_2X4:inst11|inst3    ; |ULA_8_bits|ULA_1_bit:inst4|DECODER_2X4:inst11|inst3    ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst5|inst6                       ; |ULA_8_bits|ULA_1_bit:inst5|inst6                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst5|inst3                       ; |ULA_8_bits|ULA_1_bit:inst5|inst3                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst5|FULL_ADDER_1BIT:inst1|inst2 ; |ULA_8_bits|ULA_1_bit:inst5|FULL_ADDER_1BIT:inst1|inst2 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst5|FULL_ADDER_1BIT:inst1|inst5 ; |ULA_8_bits|ULA_1_bit:inst5|FULL_ADDER_1BIT:inst1|inst5 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst5|FULL_ADDER_1BIT:inst1|inst3 ; |ULA_8_bits|ULA_1_bit:inst5|FULL_ADDER_1BIT:inst1|inst3 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst5|FULL_ADDER_1BIT:inst1|inst4 ; |ULA_8_bits|ULA_1_bit:inst5|FULL_ADDER_1BIT:inst1|inst4 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst5|DECODER_2X4:inst11|inst     ; |ULA_8_bits|ULA_1_bit:inst5|DECODER_2X4:inst11|inst     ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst5|DECODER_2X4:inst11|inst1    ; |ULA_8_bits|ULA_1_bit:inst5|DECODER_2X4:inst11|inst1    ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst5|DECODER_2X4:inst11|inst3    ; |ULA_8_bits|ULA_1_bit:inst5|DECODER_2X4:inst11|inst3    ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst6|inst6                       ; |ULA_8_bits|ULA_1_bit:inst6|inst6                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst6|inst3                       ; |ULA_8_bits|ULA_1_bit:inst6|inst3                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst6|inst9                       ; |ULA_8_bits|ULA_1_bit:inst6|inst9                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst6|FULL_ADDER_1BIT:inst1|inst2 ; |ULA_8_bits|ULA_1_bit:inst6|FULL_ADDER_1BIT:inst1|inst2 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst6|FULL_ADDER_1BIT:inst1|inst5 ; |ULA_8_bits|ULA_1_bit:inst6|FULL_ADDER_1BIT:inst1|inst5 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst6|FULL_ADDER_1BIT:inst1|inst3 ; |ULA_8_bits|ULA_1_bit:inst6|FULL_ADDER_1BIT:inst1|inst3 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst6|FULL_ADDER_1BIT:inst1|inst4 ; |ULA_8_bits|ULA_1_bit:inst6|FULL_ADDER_1BIT:inst1|inst4 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst6|DECODER_2X4:inst11|inst     ; |ULA_8_bits|ULA_1_bit:inst6|DECODER_2X4:inst11|inst     ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst6|DECODER_2X4:inst11|inst1    ; |ULA_8_bits|ULA_1_bit:inst6|DECODER_2X4:inst11|inst1    ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst6|DECODER_2X4:inst11|inst3    ; |ULA_8_bits|ULA_1_bit:inst6|DECODER_2X4:inst11|inst3    ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst7|inst6                       ; |ULA_8_bits|ULA_1_bit:inst7|inst6                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst7|inst3                       ; |ULA_8_bits|ULA_1_bit:inst7|inst3                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst7|FULL_ADDER_1BIT:inst1|inst2 ; |ULA_8_bits|ULA_1_bit:inst7|FULL_ADDER_1BIT:inst1|inst2 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst7|FULL_ADDER_1BIT:inst1|inst5 ; |ULA_8_bits|ULA_1_bit:inst7|FULL_ADDER_1BIT:inst1|inst5 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst7|FULL_ADDER_1BIT:inst1|inst3 ; |ULA_8_bits|ULA_1_bit:inst7|FULL_ADDER_1BIT:inst1|inst3 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst7|FULL_ADDER_1BIT:inst1|inst4 ; |ULA_8_bits|ULA_1_bit:inst7|FULL_ADDER_1BIT:inst1|inst4 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst7|DECODER_2X4:inst11|inst     ; |ULA_8_bits|ULA_1_bit:inst7|DECODER_2X4:inst11|inst     ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst7|DECODER_2X4:inst11|inst1    ; |ULA_8_bits|ULA_1_bit:inst7|DECODER_2X4:inst11|inst1    ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst7|DECODER_2X4:inst11|inst3    ; |ULA_8_bits|ULA_1_bit:inst7|DECODER_2X4:inst11|inst3    ; out0             ;
+---------------------------------------------------------+---------------------------------------------------------+------------------+


The following table displays output ports that do not toggle to 0 during simulation.
+--------------------------------------------------------------------------------------------------------------------------------------+
; Missing 0-Value Coverage                                                                                                             ;
+---------------------------------------------------------+---------------------------------------------------------+------------------+
; Node Name                                               ; Output Port Name                                        ; Output Port Type ;
+---------------------------------------------------------+---------------------------------------------------------+------------------+
; |ULA_8_bits|COUT                                        ; |ULA_8_bits|COUT                                        ; pin_out          ;
; |ULA_8_bits|B[3]                                        ; |ULA_8_bits|B[3]                                        ; out              ;
; |ULA_8_bits|CIN                                         ; |ULA_8_bits|CIN                                         ; out              ;
; |ULA_8_bits|F0                                          ; |ULA_8_bits|F0                                          ; out              ;
; |ULA_8_bits|ULA_1_bit:inst|inst6                        ; |ULA_8_bits|ULA_1_bit:inst|inst6                        ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst|inst3                        ; |ULA_8_bits|ULA_1_bit:inst|inst3                        ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst|inst9                        ; |ULA_8_bits|ULA_1_bit:inst|inst9                        ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst|FULL_ADDER_1BIT:inst1|inst2  ; |ULA_8_bits|ULA_1_bit:inst|FULL_ADDER_1BIT:inst1|inst2  ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst|FULL_ADDER_1BIT:inst1|inst5  ; |ULA_8_bits|ULA_1_bit:inst|FULL_ADDER_1BIT:inst1|inst5  ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst|FULL_ADDER_1BIT:inst1|inst3  ; |ULA_8_bits|ULA_1_bit:inst|FULL_ADDER_1BIT:inst1|inst3  ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst|FULL_ADDER_1BIT:inst1|inst4  ; |ULA_8_bits|ULA_1_bit:inst|FULL_ADDER_1BIT:inst1|inst4  ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst|DECODER_2X4:inst11|inst      ; |ULA_8_bits|ULA_1_bit:inst|DECODER_2X4:inst11|inst      ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst|DECODER_2X4:inst11|inst2     ; |ULA_8_bits|ULA_1_bit:inst|DECODER_2X4:inst11|inst2     ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst|DECODER_2X4:inst11|inst3     ; |ULA_8_bits|ULA_1_bit:inst|DECODER_2X4:inst11|inst3     ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst1|inst6                       ; |ULA_8_bits|ULA_1_bit:inst1|inst6                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst1|inst3                       ; |ULA_8_bits|ULA_1_bit:inst1|inst3                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst1|inst9                       ; |ULA_8_bits|ULA_1_bit:inst1|inst9                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst1|FULL_ADDER_1BIT:inst1|inst2 ; |ULA_8_bits|ULA_1_bit:inst1|FULL_ADDER_1BIT:inst1|inst2 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst1|FULL_ADDER_1BIT:inst1|inst5 ; |ULA_8_bits|ULA_1_bit:inst1|FULL_ADDER_1BIT:inst1|inst5 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst1|FULL_ADDER_1BIT:inst1|inst3 ; |ULA_8_bits|ULA_1_bit:inst1|FULL_ADDER_1BIT:inst1|inst3 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst1|FULL_ADDER_1BIT:inst1|inst4 ; |ULA_8_bits|ULA_1_bit:inst1|FULL_ADDER_1BIT:inst1|inst4 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst1|DECODER_2X4:inst11|inst     ; |ULA_8_bits|ULA_1_bit:inst1|DECODER_2X4:inst11|inst     ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst1|DECODER_2X4:inst11|inst2    ; |ULA_8_bits|ULA_1_bit:inst1|DECODER_2X4:inst11|inst2    ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst1|DECODER_2X4:inst11|inst3    ; |ULA_8_bits|ULA_1_bit:inst1|DECODER_2X4:inst11|inst3    ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst2|inst6                       ; |ULA_8_bits|ULA_1_bit:inst2|inst6                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst2|inst3                       ; |ULA_8_bits|ULA_1_bit:inst2|inst3                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst2|inst9                       ; |ULA_8_bits|ULA_1_bit:inst2|inst9                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst2|FULL_ADDER_1BIT:inst1|inst2 ; |ULA_8_bits|ULA_1_bit:inst2|FULL_ADDER_1BIT:inst1|inst2 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst2|FULL_ADDER_1BIT:inst1|inst5 ; |ULA_8_bits|ULA_1_bit:inst2|FULL_ADDER_1BIT:inst1|inst5 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst2|FULL_ADDER_1BIT:inst1|inst3 ; |ULA_8_bits|ULA_1_bit:inst2|FULL_ADDER_1BIT:inst1|inst3 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst2|FULL_ADDER_1BIT:inst1|inst4 ; |ULA_8_bits|ULA_1_bit:inst2|FULL_ADDER_1BIT:inst1|inst4 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst2|DECODER_2X4:inst11|inst     ; |ULA_8_bits|ULA_1_bit:inst2|DECODER_2X4:inst11|inst     ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst2|DECODER_2X4:inst11|inst2    ; |ULA_8_bits|ULA_1_bit:inst2|DECODER_2X4:inst11|inst2    ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst2|DECODER_2X4:inst11|inst3    ; |ULA_8_bits|ULA_1_bit:inst2|DECODER_2X4:inst11|inst3    ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst3|inst6                       ; |ULA_8_bits|ULA_1_bit:inst3|inst6                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst3|inst3                       ; |ULA_8_bits|ULA_1_bit:inst3|inst3                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst3|inst9                       ; |ULA_8_bits|ULA_1_bit:inst3|inst9                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst3|FULL_ADDER_1BIT:inst1|inst2 ; |ULA_8_bits|ULA_1_bit:inst3|FULL_ADDER_1BIT:inst1|inst2 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst3|FULL_ADDER_1BIT:inst1|inst5 ; |ULA_8_bits|ULA_1_bit:inst3|FULL_ADDER_1BIT:inst1|inst5 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst3|FULL_ADDER_1BIT:inst1|inst3 ; |ULA_8_bits|ULA_1_bit:inst3|FULL_ADDER_1BIT:inst1|inst3 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst3|FULL_ADDER_1BIT:inst1|inst4 ; |ULA_8_bits|ULA_1_bit:inst3|FULL_ADDER_1BIT:inst1|inst4 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst3|DECODER_2X4:inst11|inst     ; |ULA_8_bits|ULA_1_bit:inst3|DECODER_2X4:inst11|inst     ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst3|DECODER_2X4:inst11|inst2    ; |ULA_8_bits|ULA_1_bit:inst3|DECODER_2X4:inst11|inst2    ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst3|DECODER_2X4:inst11|inst3    ; |ULA_8_bits|ULA_1_bit:inst3|DECODER_2X4:inst11|inst3    ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst4|inst6                       ; |ULA_8_bits|ULA_1_bit:inst4|inst6                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst4|inst3                       ; |ULA_8_bits|ULA_1_bit:inst4|inst3                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst4|inst9                       ; |ULA_8_bits|ULA_1_bit:inst4|inst9                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst4|FULL_ADDER_1BIT:inst1|inst2 ; |ULA_8_bits|ULA_1_bit:inst4|FULL_ADDER_1BIT:inst1|inst2 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst4|FULL_ADDER_1BIT:inst1|inst5 ; |ULA_8_bits|ULA_1_bit:inst4|FULL_ADDER_1BIT:inst1|inst5 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst4|FULL_ADDER_1BIT:inst1|inst3 ; |ULA_8_bits|ULA_1_bit:inst4|FULL_ADDER_1BIT:inst1|inst3 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst4|FULL_ADDER_1BIT:inst1|inst4 ; |ULA_8_bits|ULA_1_bit:inst4|FULL_ADDER_1BIT:inst1|inst4 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst4|DECODER_2X4:inst11|inst     ; |ULA_8_bits|ULA_1_bit:inst4|DECODER_2X4:inst11|inst     ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst4|DECODER_2X4:inst11|inst2    ; |ULA_8_bits|ULA_1_bit:inst4|DECODER_2X4:inst11|inst2    ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst4|DECODER_2X4:inst11|inst3    ; |ULA_8_bits|ULA_1_bit:inst4|DECODER_2X4:inst11|inst3    ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst5|inst6                       ; |ULA_8_bits|ULA_1_bit:inst5|inst6                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst5|inst3                       ; |ULA_8_bits|ULA_1_bit:inst5|inst3                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst5|inst9                       ; |ULA_8_bits|ULA_1_bit:inst5|inst9                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst5|FULL_ADDER_1BIT:inst1|inst2 ; |ULA_8_bits|ULA_1_bit:inst5|FULL_ADDER_1BIT:inst1|inst2 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst5|FULL_ADDER_1BIT:inst1|inst5 ; |ULA_8_bits|ULA_1_bit:inst5|FULL_ADDER_1BIT:inst1|inst5 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst5|FULL_ADDER_1BIT:inst1|inst3 ; |ULA_8_bits|ULA_1_bit:inst5|FULL_ADDER_1BIT:inst1|inst3 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst5|FULL_ADDER_1BIT:inst1|inst4 ; |ULA_8_bits|ULA_1_bit:inst5|FULL_ADDER_1BIT:inst1|inst4 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst5|DECODER_2X4:inst11|inst     ; |ULA_8_bits|ULA_1_bit:inst5|DECODER_2X4:inst11|inst     ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst5|DECODER_2X4:inst11|inst2    ; |ULA_8_bits|ULA_1_bit:inst5|DECODER_2X4:inst11|inst2    ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst5|DECODER_2X4:inst11|inst3    ; |ULA_8_bits|ULA_1_bit:inst5|DECODER_2X4:inst11|inst3    ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst6|inst6                       ; |ULA_8_bits|ULA_1_bit:inst6|inst6                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst6|inst3                       ; |ULA_8_bits|ULA_1_bit:inst6|inst3                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst6|inst9                       ; |ULA_8_bits|ULA_1_bit:inst6|inst9                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst6|FULL_ADDER_1BIT:inst1|inst2 ; |ULA_8_bits|ULA_1_bit:inst6|FULL_ADDER_1BIT:inst1|inst2 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst6|FULL_ADDER_1BIT:inst1|inst5 ; |ULA_8_bits|ULA_1_bit:inst6|FULL_ADDER_1BIT:inst1|inst5 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst6|FULL_ADDER_1BIT:inst1|inst3 ; |ULA_8_bits|ULA_1_bit:inst6|FULL_ADDER_1BIT:inst1|inst3 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst6|FULL_ADDER_1BIT:inst1|inst4 ; |ULA_8_bits|ULA_1_bit:inst6|FULL_ADDER_1BIT:inst1|inst4 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst6|DECODER_2X4:inst11|inst     ; |ULA_8_bits|ULA_1_bit:inst6|DECODER_2X4:inst11|inst     ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst6|DECODER_2X4:inst11|inst2    ; |ULA_8_bits|ULA_1_bit:inst6|DECODER_2X4:inst11|inst2    ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst6|DECODER_2X4:inst11|inst3    ; |ULA_8_bits|ULA_1_bit:inst6|DECODER_2X4:inst11|inst3    ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst7|inst6                       ; |ULA_8_bits|ULA_1_bit:inst7|inst6                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst7|inst3                       ; |ULA_8_bits|ULA_1_bit:inst7|inst3                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst7|inst9                       ; |ULA_8_bits|ULA_1_bit:inst7|inst9                       ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst7|FULL_ADDER_1BIT:inst1|inst2 ; |ULA_8_bits|ULA_1_bit:inst7|FULL_ADDER_1BIT:inst1|inst2 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst7|FULL_ADDER_1BIT:inst1|inst5 ; |ULA_8_bits|ULA_1_bit:inst7|FULL_ADDER_1BIT:inst1|inst5 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst7|FULL_ADDER_1BIT:inst1|inst3 ; |ULA_8_bits|ULA_1_bit:inst7|FULL_ADDER_1BIT:inst1|inst3 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst7|FULL_ADDER_1BIT:inst1|inst4 ; |ULA_8_bits|ULA_1_bit:inst7|FULL_ADDER_1BIT:inst1|inst4 ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst7|DECODER_2X4:inst11|inst     ; |ULA_8_bits|ULA_1_bit:inst7|DECODER_2X4:inst11|inst     ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst7|DECODER_2X4:inst11|inst2    ; |ULA_8_bits|ULA_1_bit:inst7|DECODER_2X4:inst11|inst2    ; out0             ;
; |ULA_8_bits|ULA_1_bit:inst7|DECODER_2X4:inst11|inst3    ; |ULA_8_bits|ULA_1_bit:inst7|DECODER_2X4:inst11|inst3    ; out0             ;
+---------------------------------------------------------+---------------------------------------------------------+------------------+


+---------------------+
; Simulator INI Usage ;
+--------+------------+
; Option ; Usage      ;
+--------+------------+


+--------------------+
; Simulator Messages ;
+--------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit Simulator
    Info: Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition
    Info: Processing started: Wed May 07 08:21:26 2025
Info: Command: quartus_sim --simulation_results_format=VWF MIC1 -c MIC1
Info (324025): Using vector source file "C:/Users/Luiza/Desktop/LAOC1/ULA_8bit.vwf"
Info (310003): Option to preserve fewer signal transitions to reduce memory requirements is enabled
    Info (310004): Simulation has been partitioned into sub-simulations according to the maximum transition count determined by the engine. Transitions from memory will be flushed out to disk at the end of each sub-simulation to reduce memory requirements.
Info (310002): Simulation partitioned into 1 sub-simulations
Info (328053): Simulation coverage is      49.18 %
Info (328052): Number of transitions in simulation is 423
Info (324045): Vector file MIC1.sim.vwf is saved in VWF text format. You can compress it into CVWF format in order to reduce file size. For more details please refer to the Quartus II Help.
Info: Quartus II 64-Bit Simulator was successful. 0 errors, 0 warnings
    Info: Peak virtual memory: 4446 megabytes
    Info: Processing ended: Wed May 07 08:21:26 2025
    Info: Elapsed time: 00:00:00
    Info: Total CPU time (on all processors): 00:00:00


